[{"C:\\Users\\grait\\Desktop\\reactforms\\01-starting-project\\src\\index.js":"1","C:\\Users\\grait\\Desktop\\reactforms\\01-starting-project\\src\\App.js":"2","C:\\Users\\grait\\Desktop\\reactforms\\01-starting-project\\src\\components\\SimpleInput.js":"3","C:\\Users\\grait\\Desktop\\reactforms\\01-starting-project\\src\\hooks\\use-input.js":"4","C:\\Users\\grait\\Desktop\\reactforms\\01-starting-project\\src\\components\\BasicForm.js":"5"},{"size":142,"mtime":1616595887000,"results":"6","hashOfConfig":"7"},{"size":236,"mtime":1640790702635,"results":"8","hashOfConfig":"7"},{"size":2109,"mtime":1640789407898,"results":"9","hashOfConfig":"7"},{"size":728,"mtime":1640788765585,"results":"10","hashOfConfig":"7"},{"size":3151,"mtime":1640789834452,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1pyclci",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\grait\\Desktop\\reactforms\\01-starting-project\\src\\index.js",[],["24","25"],"C:\\Users\\grait\\Desktop\\reactforms\\01-starting-project\\src\\App.js",[],"C:\\Users\\grait\\Desktop\\reactforms\\01-starting-project\\src\\components\\SimpleInput.js",["26"],"import useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.trim() !== \"\" && value.includes(\"@\"));\n\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitionHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName, \"||||||\", enteredEmail);\n\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onChange={nameChangedHandler}\n          onBlur={nameBlurHandler}\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n        />\n        {nameInputHasError && <p className=\"error-text\">Name cant be empty</p>}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          onChange={emailChangedHandler}\n          onBlur={emailBlurHandler}\n          type=\"email\"\n          id=\"email\"\n          value={enteredEmail}\n        />\n        {emailInputHasError && <p className=\"error-text\">Email is invalid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","C:\\Users\\grait\\Desktop\\reactforms\\01-starting-project\\src\\hooks\\use-input.js",[],"C:\\Users\\grait\\Desktop\\reactforms\\01-starting-project\\src\\components\\BasicForm.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":10,"nodeType":"33","messageId":"34","endLine":1,"endColumn":18},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]