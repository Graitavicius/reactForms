{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grait\\\\Desktop\\\\reactforms\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [nameIsValid, setNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (nameIsValid) {\n      console.log(\"valid\");\n    }\n  }, [nameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmitionHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim() === \"\") {\n      setNameIsValid(false);\n      return;\n    }\n\n    setNameIsValid(true);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    setEnteredName(\"\");\n  };\n\n  const nameInputClasses = nameIsValid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        onChange: nameInputChangeHandler,\n        type: \"text\",\n        id: \"name\",\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), !nameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name cant be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"r3f8GRqtLOyQe0cyIrAOnM8kd5U=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/grait/Desktop/reactforms/01-starting-project/src/components/SimpleInput.js"],"names":["useState","useRef","useEffect","SimpleInput","props","nameInputRef","enteredName","setEnteredName","nameIsValid","setNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameInputChangeHandler","event","target","value","formSubmitionHandler","preventDefault","trim","enteredValue","current","nameInputClasses"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACU,kBAAD,EAAqBC,qBAArB,IAA8CX,QAAQ,CAAC,KAAD,CAA5D;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,WAAJ,EAAiB;AACfI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,GAJQ,EAIN,CAACL,WAAD,CAJM,CAAT;;AAMA,QAAMM,sBAAsB,GAAIC,KAAD,IAAW;AACxCR,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIH,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAIb,WAAW,CAACc,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BX,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA;AACD;;AAEDA,IAAAA,cAAc,CAAC,IAAD,CAAd;AAEA,UAAMY,YAAY,GAAGhB,YAAY,CAACiB,OAAb,CAAqBL,KAA1C;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAZ;AAEAd,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAdD;;AAgBA,QAAMgB,gBAAgB,GAAGf,WAAW,GAChC,cADgC,GAEhC,sBAFJ;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEU,oBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAElB,YADP;AAEE,QAAA,QAAQ,EAAES,sBAFZ;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,EAAE,EAAC,MAJL;AAKE,QAAA,KAAK,EAAER;AALT;AAAA;AAAA;AAAA;AAAA,cAFF,EASG,CAACE,WAAD,iBAAgB;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAtDD;;GAAML,W;;KAAAA,W;AAwDN,eAAeA,WAAf","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [nameIsValid, setNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  useEffect(() => {\n    if (nameIsValid) {\n      console.log(\"valid\");\n    }\n  }, [nameIsValid]);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmitionHandler = (event) => {\n    event.preventDefault();\n\n    if (enteredName.trim() === \"\") {\n      setNameIsValid(false);\n      return;\n    }\n\n    setNameIsValid(true);\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n    setEnteredName(\"\");\n  };\n\n  const nameInputClasses = nameIsValid\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  return (\n    <form onSubmit={formSubmitionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          onChange={nameInputChangeHandler}\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n        />\n        {!nameIsValid && <p className=\"error-text\">Name cant be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}